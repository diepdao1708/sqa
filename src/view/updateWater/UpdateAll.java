/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.updateWater;

import controller.MeterDAO;
import controller.ReadingDAO;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Meter;
import model.Reading;

/**
 *
 * @author HP
 */
public class UpdateAll extends javax.swing.JFrame {

    /**
     * Creates new form UpdateAll
     */
    private DefaultTableModel model;
    public UpdateAll() {
        initComponents();
        setTitle("Cập nhật số nước");
        setLocationRelativeTo(this);
        getContentPane().setBackground(Color.white);
        fillTable();
    }
    
    private void fillTable(){
        model = (DefaultTableModel) updateTable.getModel();
        model.setRowCount(0);
        MeterDAO mdao = new MeterDAO();
        List<Meter> list = mdao.getAllMeter();
        for(Meter m:list){
            model.addRow(new Object[]{m.getUser().getAccount_code(), m.getUser().getName(), 
                m.getUser().getAddress(), m.getSerial_number(), "", m.getMeter_id()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dayUpdate = new com.toedter.calendar.JDateChooser();
        updateBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        updateTable = new javax.swing.JTable();
        backBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Cập nhật số nước");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Ngày cập nhật:");

        updateBTN.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        updateBTN.setText("Cập nhật");
        updateBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBTNMouseClicked(evt);
            }
        });
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        updateTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        updateTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Họ tên", "Địa chỉ", "Mã công tơ", "Số nước", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        updateTable.setRowHeight(30);
        jScrollPane1.setViewportView(updateTable);
        if (updateTable.getColumnModel().getColumnCount() > 0) {
            updateTable.getColumnModel().getColumn(4).setPreferredWidth(0);
            updateTable.getColumnModel().getColumn(5).setMinWidth(0);
            updateTable.getColumnModel().getColumn(5).setPreferredWidth(0);
            updateTable.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        backBTN.setText("<");
        backBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBTNMouseClicked(evt);
            }
        });
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(backBTN)
                        .addGap(349, 349, 349)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jLabel2)
                        .addGap(81, 81, 81)
                        .addComponent(dayUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(updateBTN)))
                .addContainerGap(302, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBTN)
                    .addComponent(jLabel1))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dayUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(updateBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateBTNActionPerformed

    private void backBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBTNMouseClicked
        new UpdateMain().setVisible(true);
        dispose();
    }//GEN-LAST:event_backBTNMouseClicked

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backBTNActionPerformed

    private void updateBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBTNMouseClicked
        model = (DefaultTableModel) updateTable.getModel();
        int row = model.getRowCount();
        Date dateUp = dayUpdate.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(dateUp);
        int month = calendar.get(calendar.MONTH)+1;
        int year = calendar.get(calendar.YEAR);
        String date = sdf.format(dateUp);
        ReadingDAO rdao = new ReadingDAO();
        String re = "";
        int checkRow = -1;
        for(int i=0; i<row; i++){
            int mId = 0;
            int num=0;
            try {
                mId = Integer.parseInt(model.getValueAt(i, 5).toString());
                num = Integer.parseInt(model.getValueAt(i, 4).toString());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Sai định dạng số nước");
                return;
            }
            Reading dform = new Reading(month, year,num, date, mId);
            Reading reading = rdao.getNearestReading(dform.getMeter_id());
            if(check(dform, reading)){
                continue;
            }else{
                checkRow = i;
                break;
            }
        }
        if(checkRow != -1){
            String m = model.getValueAt(checkRow, 3).toString();
            JOptionPane.showMessageDialog(this, "Cập nhật không thành công (kiểm tra lại ngày cập nhật hoặc số nước ở đồng hồ " + m+")");
        }else{
            for(int i=0; i<row; i++){
                int mId = Integer.parseInt(model.getValueAt(i, 5).toString());
                int num = Integer.parseInt(model.getValueAt(i, 4).toString());
                Reading dform = new Reading(month, year,num, date, mId);
                rdao.insertReading(dform);
            }
            JOptionPane.showMessageDialog(this,"Cập nhật thành công");
            model.setRowCount(0);fillTable();
        }
    }//GEN-LAST:event_updateBTNMouseClicked

    private boolean check(Reading dform, Reading reading){
        if(reading.getMeter_id() == 0){
            return true;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            java.util.Date dateform = sdf.parse(dform.getCreated_date());
            java.util.Date dateNearest = sdf.parse(reading.getCreated_date());
            if(dateform.compareTo(dateNearest) <= 0){
                return false;
            }
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        if(dform.getReading()<= reading.getReading()) return false;
        return true;
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateAll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateAll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private com.toedter.calendar.JDateChooser dayUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateBTN;
    private javax.swing.JTable updateTable;
    // End of variables declaration//GEN-END:variables
}
